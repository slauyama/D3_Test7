doctype html
html 
	head
		meta(http-equiv="X-UA-Compatible" content="chrome=1")
		meta(http-equiv="Content-Type" content="text/html;charset=utf-8")
		title X3DOM Test 7
		script(type="text/javascript" src="http://mbostock.github.com/d3/d3.js")
		script(type="text/javascript" src="http://x3dom.org/x3dom/example/x3dom.js")
		
		link(rel="stylesheet" type="text/css" href="css/main.min.css")
	
	body
		div.rack-view-options.floatLeft
			h2 Camera Options:
			// div.camera-option contains all the different views you can toggle through.
			div.buttons.camera-option
				each view, index in["Top View", "Front View", "Left View", "Right View", "Back View", "Perspective"]
					- var className = !index ? ' selected-view' : ''
					input.button(type="button", class="view"+index, class=className,  value=view)
			
			h2 Color Options:
			// div.color-option contains all the different colors you can shuffe through.
			div.buttons.color-option
				each color, index in ["Power", "Weight", "Temperature"]
					- var className = !index ? ' selected-color' : ''
					input.button(type="button" class=className value=color)
			// div.formGroup contains two controls. Displaying a grid and shuffling through views
			//  Shuffling through views has a bug
			div.formGroup
				label(for="grid-toggle") Display Grid:
				input#grid-toggle.checkbox(type="checkbox" checked=true)
				label(for="view-shuffle") Shuffle Views:
				input#view-shuffle.checkbox(type="checkbox" checked=false)

		div.floatClear
		// x3d#x3dElement will contains all 3D elements
		x3d#x3dElement.floatLeft
			// added buttons. buttons do not currently work
			button#zoom-in Zoom In
			button#zoom-out Zoom Out
		// #rack-data is designed so that a hover of a rack will bring up the necessary data.
		// This does not work
		div#rack-data
			h2 Rack Information:
			ul.alignRight.floatLeft
				each descriptor in ["Component ID", "Name", "Power (C/P/M)", "Temperature (C/P/M)", "Weight (C/P/M)", "Used Units (C/P)","Largest Unit Location", "Largest Unit Size", "Power Actual Derivation"]
					li= descriptor + ": "

			ul(class="floatRight")
				li#ComponentID-Data 1471
				li#Name-Data 50M
				li#Power-Data 115/0/300
				li#Heat-Data 16/0/35000
				li#Weight-Data 16/0/500
				li#UsedUnits-Data 1/0
				li#UnitLocation-Data 1
				li#UnitSize-Data 41
				li#PowerAD-Data 115
			p.floatClear.footnotes *C - Current, P - Planned, M - Max
			br/

		div#leader-data.floatLeft.floatClear
			h2 Rack Leaders:
			// ul#leader-list will show the top 3 leaders of a certain category.
			ul#leader-list
				each descriptor, index in ["Power", "Heat", "Weight", "Used Units","Largest Unit Location", "Largest Unit Size"]
					ol(id="#{descriptor.replace(' ','-').toLowerCase()}-leader" class="leader")
						h3= descriptor + ":"
						each innerIndex in [1,2,3]
							li(class="leader-item #{descriptor.replace(/\s/g,'-').toLowerCase()+innerIndex}") N/A
					if index === 2
						// Added an additional div to have 3 lists on top and 3 lists on bottom
						div.floatClear
		// link to all of the scripts I have written.
		script(src="js/main.js")